@inject Models.MyFile myFile;
@inject Models.MockInstructionList mockInstructionList;
@inject Services.MenuService menuService;
@inject Services.Analysis Analyzer;
@inject Services.HardwareService HWS;
@inject Services.DebugService debugService;

<InputFile OnChange="@LoadFiles" multiple/>

@if (!string.IsNullOrEmpty(myFile.Name))
{
    <p>@myFile.Name</p>
}

@code {



    private async void LoadFiles(InputFileChangeEventArgs e)
    {
        myFile.Lines.Clear();
        foreach(var file in e.GetMultipleFiles())
        {
            myFile.Name = file.Name;
            StreamReader sr = new StreamReader(file.OpenReadStream());
            string? line;
            while ((line = await sr.ReadLineAsync()) != null)
            {
                myFile.Lines.Add(new Models.MyLine(line));
            }
        }
        
        //myFile.MyStreamReader = await new StreamReader(e.File.OpenReadStream()).ReadToEndAsync();
        
        
        
        
        myFile.RemoveEmptyLines();
        menuService.NotifyChanged();
        HWS.Initialize();
        Analyzer.Analyze(myFile);
        mockInstructionList.CreateMockInstructionList(myFile.Name);
        debugService.InitializeDebug(mockInstructionList._instructions);

    }
}
