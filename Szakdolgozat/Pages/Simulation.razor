@page "/simulation"
@inject Models.MyFile myFile
@inject Services.DebugService debugService;
@inject Services.ImageService imageService;
@inject Services.Analysis analysis;
@inject Services.InstructionParser instructionParser;
@inject IJSRuntime JS

<h3>Arithmetic Simulation</h3>


<input @bind="inputInstructionList"/>
<button @onclick="SimulateCustom"> Simulate Custom Instruction List </button>

<div class="row">
    <div class="column">
        <h4>Results</h4>
        @for(int i =0; i < debugService.resultList.Count; i++)
        {
            <p> @debugService.resultList[i]</p>
        }
    </div>
    <div class="column">
        <h4>Data</h4>
            <p> Steps : @debugService.stepCount </p>
            <p> Memory Used : @debugService.memory Bytes @(debugService.memory/1024) kiloBytes</p>
            <p> Run Time : @debugService.elapsedTime (hh:mm:ss:ms)</p>
            <p> Global Size : @(debugService.GetValue(analysis.enqueue[4]))</p>
            <p> Local Size : @(debugService.GetValue(analysis.enqueue[5]))</p>
            <p> Device Used : @analysis.device</p>
    </div>
</div>

<div class="horizontalImageDiv">
    @if (manualURL is null)
    {
        <img id="image"/>
    }
    else
    {
        <img src="@manualURL"/>
    }


</div>

@code {

    private string? manualURL;
    private string? inputInstructionList;
    //Browser wont reload Image because of cache, so a new image (uri) is made
    private int imageIndex = 0;

    protected override async Task OnInitializedAsync()
    {
        SaveSetImage(imageIndex.ToString());
        imageIndex++;
    }

    //unused, not working
    private async Task SetImageAsync()
    {
        var imageStream = new System.IO.MemoryStream();
        debugService.AST.Save(imageStream,System.Drawing.Imaging.ImageFormat.Png);
        var dotnetImageStream = new DotNetStreamReference(imageStream);
        await JS.InvokeVoidAsync("setImage", "image", dotnetImageStream);
    }


    private void SaveSetImage(string index="")
    {
        debugService.AST.Save($"wwwroot/AST{index}.png");
        manualURL = $"AST{index}.png";
    }

    private void SimulateCustom()
    {
        debugService.resultList.Clear();
        debugService.AST = null;
        debugService.InitializeDebug(instructionParser.ParseInstructons(inputInstructionList)._instructions);
        SaveSetImage(imageIndex.ToString());
        StateHasChanged();
        imageIndex++;
    }

}
