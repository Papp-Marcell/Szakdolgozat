@inject Models.MyFile myFile;
@inject Services.MenuService menuService;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Szakdolgozat</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        
        @if (!string.IsNullOrEmpty(myFile.Name))
        {
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="todo">
                <span class="oi oi-list" aria-hidden="true"></span> ToDo
            </NavLink>
        </div> 
        }

        @if (!string.IsNullOrEmpty(myFile.Name))
        {
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="architecture">
                <span class="oi oi-list" aria-hidden="true"></span> Architecture
            </NavLink>
        </div> 
        }

        
        @if (!string.IsNullOrEmpty(myFile.Name))
        {
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="code">
                <span class="oi oi-list" aria-hidden="true"></span> Code
            </NavLink>
        </div> 
        }
        
        
    </nav>
</div>

@code {
    protected override void OnInitialized()
    {
        menuService.OnChanged += Changed;
    }
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void Changed(object sender,EventArgs e)
    {
        InvokeAsync(StateHasChanged);

    }
}
